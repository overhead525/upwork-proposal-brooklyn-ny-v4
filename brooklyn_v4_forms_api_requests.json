{
	"info": {
		"_postman_id": "ffc5759c-5e91-4160-a531-d2e89be8e364",
		"name": "Brooklyn V4 - Forms API Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get User's Forms by Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"pm.test(\"Verify user's 3 forms by title\", () => {\r",
							"    const response = pm.response.json();\r",
							"    pm.expect(response.data.preview).to.be([\r",
							"        {title: \"Politics Survey\"}, \r",
							"        {title: \"Saturday Party RSVP\"}, \r",
							"        {title: \"Social Experiment\"}\r",
							"    ])\r",
							"    pm.expect(response.data.published).to.be([\r",
							"        {title: \"Political Survey\"}, \r",
							"        {title: \"Party RSVP\"}, \r",
							"        {title: \"Social Experiment\"}\r",
							"    ])\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query forms {\r\n    preview {\r\n        title\r\n    }\r\n    published {\r\n        title\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User's Forms By Content",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify user's 3 forms by number of pages\", () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response.data.preview).to.have.length(3)\r",
							"    pm.expect(response.data.preview[0]).to.have.length(2)\r",
							"    pm.expect(response.data.preview[0]).to.have.length(3)\r",
							"    pm.expect(response.data.preview[0]).to.have.length(4)\r",
							"\r",
							"    pm.expect(response.data.published).to.have.length(3)\r",
							"    pm.expect(response.data.published[0]).to.have.length(1)\r",
							"    pm.expect(response.data.published[1]).to.have.length(3)\r",
							"    pm.expect(response.data.published[2]).to.have.length(4)\r",
							"})\r",
							"\r",
							"pm.test(\"Verify user's 3 forms by property\", () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response.data.preview[0]).to.have.property(\"pages\")\r",
							"    pm.expect(response.data.preview[1]).to.have.property(\"pages\")\r",
							"    pm.expect(response.data.preview[2]).to.have.property(\"pages\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query forms {\r\n    preview {\r\n        pages\r\n    }\r\n    published {\r\n        pages\r\n    }\r\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/data",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"data"
					]
				}
			},
			"response": []
		}
	]
}